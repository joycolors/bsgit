<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pao.mapper.TOrderMapper" >
  <resultMap id="BaseResultMap" type="cn.pao.pojo.TOrder" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_category" property="orderCategory" jdbcType="INTEGER" />
    <result column="order_content" property="orderContent" jdbcType="VARCHAR" />
    <result column="address_one" property="addressOne" jdbcType="INTEGER" />
    <result column="address_two" property="addressTwo" jdbcType="INTEGER" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="order_remark" property="orderRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, user_id, order_category, order_content, address_one, address_two, order_time, 
    order_status, order_remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.pao.pojo.TOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.pao.pojo.TOrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.pao.pojo.TOrder" >
    insert into t_order (order_id, user_id, order_category, 
      order_content, address_one, address_two, 
      order_time, order_status, order_remark
      )
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderCategory,jdbcType=INTEGER}, 
      #{orderContent,jdbcType=VARCHAR}, #{addressOne,jdbcType=INTEGER}, #{addressTwo,jdbcType=INTEGER}, 
      #{orderTime,jdbcType=TIMESTAMP}, #{orderStatus,jdbcType=VARCHAR}, #{orderRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.pao.pojo.TOrder" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderCategory != null" >
        order_category,
      </if>
      <if test="orderContent != null" >
        order_content,
      </if>
      <if test="addressOne != null" >
        address_one,
      </if>
      <if test="addressTwo != null" >
        address_two,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderRemark != null" >
        order_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderCategory != null" >
        #{orderCategory,jdbcType=INTEGER},
      </if>
      <if test="orderContent != null" >
        #{orderContent,jdbcType=VARCHAR},
      </if>
      <if test="addressOne != null" >
        #{addressOne,jdbcType=INTEGER},
      </if>
      <if test="addressTwo != null" >
        #{addressTwo,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderRemark != null" >
        #{orderRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.pao.pojo.TOrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderCategory != null" >
        order_category = #{record.orderCategory,jdbcType=INTEGER},
      </if>
      <if test="record.orderContent != null" >
        order_content = #{record.orderContent,jdbcType=VARCHAR},
      </if>
      <if test="record.addressOne != null" >
        address_one = #{record.addressOne,jdbcType=INTEGER},
      </if>
      <if test="record.addressTwo != null" >
        address_two = #{record.addressTwo,jdbcType=INTEGER},
      </if>
      <if test="record.orderTime != null" >
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.orderRemark != null" >
        order_remark = #{record.orderRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set order_id = #{record.orderId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_category = #{record.orderCategory,jdbcType=INTEGER},
      order_content = #{record.orderContent,jdbcType=VARCHAR},
      address_one = #{record.addressOne,jdbcType=INTEGER},
      address_two = #{record.addressTwo,jdbcType=INTEGER},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      order_remark = #{record.orderRemark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pao.pojo.TOrder" >
    update t_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderCategory != null" >
        order_category = #{orderCategory,jdbcType=INTEGER},
      </if>
      <if test="orderContent != null" >
        order_content = #{orderContent,jdbcType=VARCHAR},
      </if>
      <if test="addressOne != null" >
        address_one = #{addressOne,jdbcType=INTEGER},
      </if>
      <if test="addressTwo != null" >
        address_two = #{addressTwo,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderRemark != null" >
        order_remark = #{orderRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pao.pojo.TOrder" >
    update t_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_category = #{orderCategory,jdbcType=INTEGER},
      order_content = #{orderContent,jdbcType=VARCHAR},
      address_one = #{addressOne,jdbcType=INTEGER},
      address_two = #{addressTwo,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_remark = #{orderRemark,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>